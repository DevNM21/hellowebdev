[{"C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\index.js":"1","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\App.js":"2","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\components\\Navbar\\Navbar.component.jsx":"3","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\pages\\HomePage\\Home.page.jsx":"4","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\components\\SideBar\\SideBar.component.jsx":"5","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\components\\CategoryCapsule\\CategoryCapsule.component.jsx":"6","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\components\\GitHubAuthBtn\\GitHubAuthBtn.component.jsx":"7","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\configs\\firebase.config.js":"8","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\components\\ImageCard\\ImageCard.component.jsx":"9","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\components\\NonImageCard\\NonImageCard.component.jsx":"10","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\utils\\data.js":"11","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\components\\Spinner.component.jsx":"12","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\components\\LightFormInput\\LightFormInput.component.jsx":"13","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\pages\\AddResources\\AddResources.component.jsx":"14","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\HOC\\PrivateRoute.HOC.jsx":"15","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\components\\DarkInputField\\DarkInputField.component.jsx":"16","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\pages\\ProjectContribution\\ProjectContribution.component.jsx":"17","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\pages\\ResourceContribution\\ResourceContribution.component.jsx":"18","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\pages\\Profile\\Profile.component.jsx":"19","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\components\\DarkInputField\\DarkSelectField.component.jsx":"20","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\configs\\darkThemeReactSelect.config.js":"21","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\components\\Collapsible\\Collapsible.component.jsx":"22","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\pages\\ResourceDetail\\ResourceDetail.component.jsx":"23","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\Redux\\store.js":"24","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\Redux\\reducer\\rootReducer.js":"25","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\Redux\\reducer\\User\\User.reducer.js":"26","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\Redux\\reducer\\User\\User.type.js":"27","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\configs\\reduxPersist.config.js":"28","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\Redux\\reducer\\Resource\\Resource.action.js":"29","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\Redux\\reducer\\Resource\\Resource.type.js":"30","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\utils\\index.js":"31","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\Redux\\reducer\\Resource\\Resource.reducer.js":"32","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\Redux\\reducer\\User\\User.action.js":"33","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\utils\\firebase\\firebase.util.js":"34"},{"size":625,"mtime":1611836487874,"results":"35","hashOfConfig":"36"},{"size":1720,"mtime":1611900423911,"results":"37","hashOfConfig":"36"},{"size":2695,"mtime":1611657961320,"results":"38","hashOfConfig":"36"},{"size":6793,"mtime":1612008746158,"results":"39","hashOfConfig":"36"},{"size":3011,"mtime":1611326556993,"results":"40","hashOfConfig":"36"},{"size":596,"mtime":1611674166151,"results":"41","hashOfConfig":"36"},{"size":2512,"mtime":1611933132096,"results":"42","hashOfConfig":"36"},{"size":675,"mtime":1612005522378,"results":"43","hashOfConfig":"36"},{"size":1318,"mtime":1611903831697,"results":"44","hashOfConfig":"36"},{"size":1132,"mtime":1611903855302,"results":"45","hashOfConfig":"36"},{"size":16928,"mtime":1611846281335,"results":"46","hashOfConfig":"36"},{"size":379,"mtime":1612009191293,"results":"47","hashOfConfig":"36"},{"size":470,"mtime":1611512094138,"results":"48","hashOfConfig":"36"},{"size":7239,"mtime":1612012070989,"results":"49","hashOfConfig":"36"},{"size":644,"mtime":1611900472811,"results":"50","hashOfConfig":"36"},{"size":492,"mtime":1611760767486,"results":"51","hashOfConfig":"36"},{"size":1235,"mtime":1611836714857,"results":"52","hashOfConfig":"36"},{"size":1254,"mtime":1611836728283,"results":"53","hashOfConfig":"36"},{"size":1197,"mtime":1611900401774,"results":"54","hashOfConfig":"36"},{"size":1705,"mtime":1612010587357,"results":"55","hashOfConfig":"36"},{"size":744,"mtime":1611662598782,"results":"56","hashOfConfig":"36"},{"size":950,"mtime":1611834035526,"results":"57","hashOfConfig":"36"},{"size":3386,"mtime":1612062833642,"results":"58","hashOfConfig":"36"},{"size":710,"mtime":1611836426067,"results":"59","hashOfConfig":"36"},{"size":573,"mtime":1611848336199,"results":"60","hashOfConfig":"36"},{"size":1254,"mtime":1612006436685,"results":"61","hashOfConfig":"36"},{"size":163,"mtime":1612005938381,"results":"62","hashOfConfig":"36"},{"size":168,"mtime":1611848345212,"results":"63","hashOfConfig":"36"},{"size":5727,"mtime":1612062871853,"results":"64","hashOfConfig":"36"},{"size":463,"mtime":1612011416965,"results":"65","hashOfConfig":"36"},{"size":648,"mtime":1611935184608,"results":"66","hashOfConfig":"36"},{"size":2227,"mtime":1612011461717,"results":"67","hashOfConfig":"36"},{"size":981,"mtime":1612064618290,"results":"68","hashOfConfig":"36"},{"size":1933,"mtime":1612005860979,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1hjokce",{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\index.js",[],["147","148"],"C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\App.js",["149"],"// Libraries\nimport React, { Suspense } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\n// Pre-load Components\nimport Navbar from \"./components/Navbar/Navbar.component\";\nimport Spinner from \"./components/Spinner.component\";\n\n// HOC\nimport PrivateRoute from \"./HOC/PrivateRoute.HOC\";\n\n// Lazy load components\nconst HomePage = React.lazy(() => import(\"./pages/HomePage/Home.page\"));\nconst AddResourses = React.lazy(() =>\n  import(\"./pages/AddResources/AddResources.component\")\n);\nconst ProjectContribution = React.lazy(() =>\n  import(\"./pages/ProjectContribution/ProjectContribution.component\")\n);\nconst ResourceContribution = React.lazy(() =>\n  import(\"./pages/ResourceContribution/ResourceContribution.component\")\n);\nconst Profile = React.lazy(() => import(\"./pages/Profile/Profile.component\"));\nconst ResourceDetails = React.lazy(() =>\n  import(\"./pages/ResourceDetail/ResourceDetail.component\")\n);\n\nfunction App() {\n  return (\n      <div className=\"app\">\n        <Navbar />\n        <Switch>\n          <Suspense fallback={<Spinner />}>\n            <Route exact path=\"/\" component={HomePage} />\n            <PrivateRoute exact path=\"/new-resource\" component={AddResourses} />\n            <Route\n              exact\n              path=\"/project-contribution\"\n              component={ProjectContribution}\n            />\n            <Route\n              exact\n              path=\"/resource-contribution\"\n              component={ResourceContribution}\n            />\n            <PrivateRoute exact path=\"/profile\" component={Profile} />\n            <Route exact path=\"/resource/:id\" component={ResourceDetails} />\n          </Suspense>\n        </Switch>\n      </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\components\\Navbar\\Navbar.component.jsx",[],"C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\pages\\HomePage\\Home.page.jsx",["150","151","152","153","154"],"import React, { useState, useEffect } from \"react\";\r\nimport algoliasearch from \"algoliasearch/lite\";\r\nimport { InstantSearch, SearchBox, Hits } from \"react-instantsearch-dom\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./Home.styles.scss\";\r\n\r\n// Components\r\nimport SideBar from \"../../components/SideBar/SideBar.component\";\r\nimport CategoryList from \"../../components/CategoryCapsule/CategoryCapsule.component\";\r\nimport NonImageCard from \"../../components/NonImageCard/NonImageCard.component\";\r\nimport ImageCard from \"../../components/ImageCard/ImageCard.component\";\r\nimport Collapsible from \"../../components/Collapsible/Collapsible.component\";\r\nimport Spinner from \"../../components/Spinner.component\";\r\n\r\n// Redux Action\r\nimport {\r\n  getResources,\r\n  getCategories,\r\n} from \"../../Redux/reducer/Resource/Resource.action\";\r\n\r\nconst Home = () => {\r\n  const [homePageData, setHomePageData] = useState({\r\n    libraries: [],\r\n    codeSnippets: [],\r\n    courses: [],\r\n    articles: [],\r\n  });\r\n  const [categories, setCategories] = useState([]);\r\n  const [filter, setFilter] = useState([\"react\"]);\r\n\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n\r\n  // Redux state\r\n  const reduxState = useSelector(({ resources }) => ({ resources }));\r\n\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const getResourcesAction = async () => {\r\n      const resources = await dispatch(getResources());\r\n      const categoriesList = await dispatch(getCategories());\r\n      setCategories(categoriesList.payload);\r\n      setHomePageData(resources.payload);\r\n    };\r\n    getResourcesAction();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (location.state)\r\n      toast.warn(location.state, {\r\n        position: \"top-right\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        onClose: () => (location.state = \"\"),\r\n      });\r\n  }, [location.state]);\r\n\r\n  // Sort the list based on search string\r\n  const SelectCategory = (id) => {\r\n    if (filter.includes(id) && filter.length > 1)\r\n      return setFilter(filter.filter((category) => category !== id));\r\n\r\n    if (!filter.includes(id)) return setFilter([...filter, id]);\r\n\r\n    return;\r\n  };\r\n\r\n  const searchClient = algoliasearch(\r\n    \"N8NI9VRBU1\",\r\n    \"fba347501ce93182f89978a9f95e17d4\"\r\n  );\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <h1 className=\"hero__text container\">\r\n        Curated Collection of all web development resources in one place.\r\n      </h1>\r\n      <div className=\"home__search__bar\">\r\n        <InstantSearch indexName=\"bestbuy\" searchClient={searchClient}>\r\n          <SearchBox />\r\n          <Hits />\r\n        </InstantSearch>\r\n      </div>\r\n      <div className=\"hero__button__group container\">\r\n        <a\r\n          href=\"https://github.com/pavankpdev/web-dev-repo\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          <button className=\"btn\">\r\n            Contribute to project\r\n            <i\r\n              className=\"fab fa-github fa-lg\"\r\n              style={{ marginLeft: \".5rem\" }}\r\n            />\r\n          </button>\r\n        </a>\r\n\r\n        <Link to=\"/new-resource\">\r\n          <button className=\"btn primary\">\r\n            Submit a resource\r\n            <i className=\"fas fa-plus fa-lg\" style={{ marginLeft: \".5rem\" }} />\r\n          </button>\r\n        </Link>\r\n        <a\r\n          href=\"https://github.com/pavankpdev/web-dev-repo\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          <button className=\"btn\">\r\n            gitHub{\" \"}\r\n            <i className=\"fas fa-star fa-lg\" style={{ margin: \"0 .5rem\" }} />\r\n            123\r\n          </button>\r\n        </a>\r\n      </div>\r\n      <div className={classnames({ hide: !reduxState.resources.loading })}>\r\n        <Spinner />\r\n      </div>\r\n      <div\r\n        className={classnames(\"home__content container-fluid\", {\r\n          hide: reduxState.resources.loading,\r\n        })}\r\n      >\r\n        <div className=\"home__sidebar__container\">\r\n          <SideBar />\r\n        </div>\r\n        <div className=\"home__resources__container\">\r\n          <div className=\"category__container\">\r\n            {categories.map((category) => (\r\n              <CategoryList\r\n                key={Math.random}\r\n                selected={filter}\r\n                {...category}\r\n                SelectCategory={SelectCategory}\r\n                key={category.id}\r\n              />\r\n            ))}\r\n          </div>\r\n          <div className=\"usefull__libraries\">\r\n            <Collapsible title=\"Usefull Libraries\">\r\n              <div className=\"home__library__card__container\">\r\n                {homePageData.libraries.map((library) => (\r\n                  <NonImageCard\r\n                    {...library}\r\n                    btnText=\"visit library\"\r\n                    key={library.id}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </Collapsible>\r\n          </div>\r\n          <div className=\"code__snippet\">\r\n            <Collapsible title=\"Code Snippets\">\r\n              <div className=\"home__codesnippet__card__container\">\r\n                {homePageData.codeSnippets.map((snippet) => (\r\n                  <NonImageCard\r\n                    {...snippet}\r\n                    btnText=\"view code\"\r\n                    key={snippet.id}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </Collapsible>\r\n          </div>\r\n          <div className=\"free__courses\">\r\n            <Collapsible title=\"Free Courses\">\r\n              <div className=\"home__free__courses__card__container\">\r\n                {homePageData.courses.map((course) => (\r\n                  <ImageCard\r\n                    {...course}\r\n                    btnText=\"Visit course\"\r\n                    key={course.id}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </Collapsible>\r\n          </div>\r\n          <div className=\"amazing__articles\">\r\n            <Collapsible title=\"Amazing articles\">\r\n              <div className=\"home__amazing__articles__card__container\">\r\n                {homePageData.articles.map((article) => (\r\n                  <ImageCard\r\n                    {...article}\r\n                    btnText=\"read article\"\r\n                    key={article.id}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </Collapsible>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\components\\SideBar\\SideBar.component.jsx",[],"C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\components\\CategoryCapsule\\CategoryCapsule.component.jsx",[],"C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\components\\GitHubAuthBtn\\GitHubAuthBtn.component.jsx",["155"],"import React, { useEffect, useState } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// styles\r\nimport \"./GitHubAuthBtn.styles.scss\";\r\n\r\n// Auth Configs\r\nimport {\r\n  firebaseAuth,\r\n  githubAuthProvider,\r\n} from \"../../configs/firebase.config\";\r\n\r\n// Redux Action\r\nimport { authUser, signOut } from \"../../Redux/reducer/User/User.action\";\r\n\r\nconst GitHubAuthBtn = () => {\r\n  const [dropDown, setDropDown] = useState(false);\r\n\r\n  const reduxState = useSelector(({ user }) => ({ user }));\r\n  const dispatch = useDispatch();\r\n\r\n  const githubSignin = async () => {\r\n    try {\r\n      const githubAuth = await firebaseAuth.signInWithPopup(githubAuthProvider);\r\n\r\n      const {\r\n        login,\r\n        name,\r\n        html_url,\r\n        avatar_url,\r\n        id,\r\n      } = githubAuth.additionalUserInfo.profile;\r\n\r\n      const currentUser = {\r\n        id,\r\n        username: login,\r\n        fullname: name,\r\n        profileUrl: html_url,\r\n        profilePic: avatar_url,\r\n      };\r\n      return await dispatch(authUser(currentUser));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const signOutUser = async () => {\r\n    try {\r\n      await firebaseAuth.signOut();\r\n      return dispatch(signOut());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return reduxState.user.isAuth ? (\r\n    <>\r\n      <div className=\"profile__data_container\">\r\n        <div className=\"profile__data\" onClick={() => setDropDown(!dropDown)}>\r\n          <h5>{reduxState.user.user.fullname}</h5>\r\n          <img src={reduxState.user.user.profilePic} alt=\"profile Pic\" />\r\n        </div>\r\n        <div className={classnames(\"profile__dropdown\", { hide: !dropDown })}>\r\n          <Link to=\"/profile\">\r\n            <div className=\"user__profile\">\r\n              <h6 className=\"app-bg-color\">Profile</h6>\r\n              <i className=\"fas fa-user app-bg-color\" />\r\n            </div>\r\n          </Link>\r\n          <div className=\"logout__user\" onClick={signOutUser}>\r\n            <h6 className=\"app-bg-color\">Logout</h6>\r\n            <i className=\"fas fa-sign-out-alt app-bg-color\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  ) : (\r\n    <>\r\n      <button className=\"btn btn-github\" onClick={githubSignin}>\r\n        Sign in with github\r\n        <i className=\"fab fa-github fa-lg\" style={{ marginLeft: \".5rem\" }} />\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GitHubAuthBtn;\r\n","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\configs\\firebase.config.js",[],"C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\components\\ImageCard\\ImageCard.component.jsx",[],"C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\components\\NonImageCard\\NonImageCard.component.jsx",[],"C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\utils\\data.js",[],"C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\components\\Spinner.component.jsx",[],"C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\components\\LightFormInput\\LightFormInput.component.jsx",[],["156","157"],"C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\pages\\AddResources\\AddResources.component.jsx",["158","159"],"import React, { useState, useEffect } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\n\r\n// Styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./AddResources.styles.scss\";\r\n\r\n// Components\r\nimport DarkInputFOrm from \"../../components/DarkInputField/DarkInputField.component\";\r\nimport DarkSelectField from \"../../components/DarkInputField/DarkSelectField.component\";\r\nimport ResourceType from \"../../components/CategoryCapsule/CategoryCapsule.component\";\r\n\r\n// Redux Action\r\nimport {\r\n  addNewResource,\r\n  getCategories,\r\n  getLanguages,\r\n  getKeywords,\r\n} from \"../../Redux/reducer/Resource/Resource.action\";\r\n\r\nconst AddResources = () => {\r\n  const [ResourceTypeList, setResourceTypeList] = useState([\r\n    { id: \"libraries\", value: \"Usefull Libraries\" },\r\n    { id: \"snippets\", value: \"Code Snippets\" },\r\n    { id: \"courses\", value: \"Free Courses\" },\r\n    { id: \"articles\", value: \"Amazing Articles\" },\r\n  ]);\r\n  const [resourceType, setResourceType] = useState(\"\");\r\n  const [categories, setCategories] = useState([]);\r\n  const [languages, setLanguages] = useState([]);\r\n  const [keywords, setKeywords] = useState([]);\r\n  const [newResourceData, setNewResourceData] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    category: [],\r\n    url: \"\",\r\n    keywords: [],\r\n    language: \"\",\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const reduxState = useSelector(({ user, resources }) => ({\r\n    user,\r\n    resources,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    const getCategoriesListAction = async () => {\r\n      const categoriesList = await dispatch(getCategories());\r\n      const keywordsList = await dispatch(getKeywords());\r\n      const languagesList = await dispatch(getLanguages());\r\n      setCategories(categoriesList.payload);\r\n      setKeywords(keywordsList.payload);\r\n      setLanguages(languagesList.payload);\r\n    };\r\n    getCategoriesListAction();\r\n  }, []);\r\n\r\n  const handleCategories = (newValue) =>\r\n    setNewResourceData({\r\n      ...newResourceData,\r\n      category: newValue.map(({ value }) => value),\r\n    });\r\n\r\n  const handleKeywords = (newValue) =>\r\n    setNewResourceData({\r\n      ...newResourceData,\r\n      keywords: newValue.map(({ value }) => value),\r\n    });\r\n\r\n  const handleLanguage = (newValue) =>\r\n    setNewResourceData({\r\n      ...newResourceData,\r\n      language: newValue.map(({ value }) => value),\r\n    });\r\n\r\n  const handleInput = (e) =>\r\n    setNewResourceData({\r\n      ...newResourceData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n\r\n  const submitResources = async () => {\r\n    const newResource = await dispatch(\r\n      addNewResource({\r\n        resourceType,\r\n        contributor: {\r\n          name: reduxState.user.user.fullname,\r\n          image: reduxState.user.user.profilePic,\r\n          id: reduxState.user.user.id,\r\n          username: reduxState.user.user.username,\r\n        },\r\n        ...newResourceData,\r\n      })\r\n    );\r\n    setResourceType(\"\");\r\n    setNewResourceData({\r\n      ...newResourceData,\r\n      name: \"\",\r\n      description: \"\",\r\n      url: \"\",\r\n    });\r\n\r\n    return toast.success(newResource.payload, {\r\n      position: \"top-center\",\r\n      autoClose: 2000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <div className=\"add__new__container rounded\">\r\n        <h4>Add New Resource</h4>\r\n        <div className=\"resource__form \">\r\n          <label>Resource Type</label>\r\n          <div className=\"resource__type\">\r\n            {ResourceTypeList.map((resource) => (\r\n              <ResourceType\r\n                customClass=\"resource__capsule\"\r\n                selected={resourceType}\r\n                {...resource}\r\n                SelectCategory={setResourceType}\r\n                key={resource.id}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"resource__form\">\r\n          <DarkSelectField\r\n            label=\"Language\"\r\n            handleChange={handleLanguage}\r\n            options={languages}\r\n            placeholder=\"Resource Language\"\r\n            creatable\r\n          />\r\n        </div>\r\n        <div className=\"resource__form\">\r\n          <DarkInputFOrm\r\n            label=\"Resource Name\"\r\n            id=\"resource\"\r\n            type=\"text\"\r\n            placeholder=\"Eg: Mongoose\"\r\n            name=\"name\"\r\n            value={newResourceData.name}\r\n            onChange={handleInput}\r\n          />\r\n        </div>\r\n        <div className=\"resource__form\">\r\n          <DarkInputFOrm\r\n            label=\"Resource Official Website / url\"\r\n            id=\"resource\"\r\n            type=\"text\"\r\n            placeholder=\"Eg: https://www.npmjs.com/package/mongoose\"\r\n            name=\"url\"\r\n            value={newResourceData.url}\r\n            onChange={handleInput}\r\n          />\r\n        </div>\r\n        <div\r\n          className={classnames(\"resource__form\", {\r\n            hide: !resourceType.includes(\"courses\"),\r\n          })}\r\n        >\r\n          <DarkInputFOrm\r\n            label=\"Resource thumbnail / image (url)\"\r\n            id=\"resource\"\r\n            type=\"url\"\r\n            placeholder=\"Eg: https://example.com/Blue.png\"\r\n            name=\"thumbnail\"\r\n            value={newResourceData.thumbnail}\r\n            onChange={handleInput}\r\n          />\r\n        </div>\r\n        <div\r\n          className={classnames(\"resource__form\", {\r\n            hide: !resourceType.includes(\"articles\"),\r\n          })}\r\n        >\r\n          <DarkInputFOrm\r\n            label=\"Resource thumbnail / image (url)\"\r\n            id=\"resource\"\r\n            type=\"url\"\r\n            placeholder=\"Eg: https://example.com/Blue.png\"\r\n            name=\"thumbnail\"\r\n            value={newResourceData.thumbnail}\r\n            onChange={handleInput}\r\n          />\r\n        </div>\r\n        <div className=\"resource__form\">\r\n          <DarkInputFOrm\r\n            label=\"Description\"\r\n            id=\"resource\"\r\n            type=\"text\"\r\n            placeholder=\"Eg: Mongoose is a MongoDB object modeling tool.....\"\r\n            name=\"description\"\r\n            value={newResourceData.description}\r\n            onChange={handleInput}\r\n          />\r\n        </div>\r\n        <div className=\"resource__form\">\r\n          <DarkSelectField\r\n            label=\"Category\"\r\n            handleChange={handleCategories}\r\n            options={categories}\r\n            placeholder=\"Select a category\"\r\n            creatable\r\n          />\r\n        </div>\r\n        <div className=\"resource__form\">\r\n          <DarkSelectField\r\n            label=\"Keywords\"\r\n            handleChange={handleKeywords}\r\n            options={keywords}\r\n            placeholder=\"Add some valid keywords\"\r\n            creatable\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-sm btn-primary\" onClick={submitResources}>\r\n          {reduxState.resources.loading ? (\r\n            <i className=\"fas fa-spinner fa-pulse fa-lg white\" />\r\n          ) : (\r\n            \"Submit\"\r\n          )}\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddResources;\r\n","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\HOC\\PrivateRoute.HOC.jsx",[],"C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\components\\DarkInputField\\DarkInputField.component.jsx",[],"C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\pages\\ProjectContribution\\ProjectContribution.component.jsx",[],"C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\pages\\ResourceContribution\\ResourceContribution.component.jsx",[],"C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\pages\\Profile\\Profile.component.jsx",["160"],"import React, { useContext } from \"react\";\r\nimport {useSelector } from \"react-redux\";\r\n\r\nimport \"./Profile.styles.scss\";\r\n\r\n// Component\r\nimport NonImageCard from \"../../components/NonImageCard/NonImageCard.component\";\r\n\r\nimport { homeData } from \"../../utils/data\";\r\nconst Profile = () => {\r\n  const reduxState = useSelector(({ user }) => ({ user }));\r\n\r\n  return (\r\n    <>\r\n      <div className=\"profile__container container\">\r\n        <div className=\"profile__image\">\r\n          <img src={reduxState.user.user.profilePic} alt=\"profilePic\" className=\"rounded\" />\r\n          <h3>{reduxState.user.user.fullname}</h3>\r\n          <h5>\r\n            <a\r\n              href={reduxState.user.user.profileUrl}\r\n              className=\"white\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              <i className=\"fab fa-github fa-lg\" />@{reduxState.user.user.username}\r\n            </a>\r\n          </h5>\r\n        </div>\r\n        <div className=\"profile__contents\">\r\n          {homeData.libraries.map((library) => (\r\n            <NonImageCard {...library} key={library.id} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\components\\DarkInputField\\DarkSelectField.component.jsx",[],"C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\configs\\darkThemeReactSelect.config.js",[],"C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\components\\Collapsible\\Collapsible.component.jsx",[],"C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\pages\\ResourceDetail\\ResourceDetail.component.jsx",["161","162"],"import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nimport \"./ResourceDetail.styles.scss\";\r\n\r\n// Components\r\nimport CategoryBagde from \"../../components/CategoryCapsule/CategoryCapsule.component\";\r\nimport Spinner from \"../../components/Spinner.component\";\r\n\r\n// Redux Action\r\nimport { getSpecifiedResource } from \"../../Redux/reducer/Resource/Resource.action\";\r\n\r\nconst ResourceDetail = () => {\r\n  const [resource, setResource] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    category: [],\r\n    url: \"\",\r\n    contributor: \"\",\r\n    language: \"\",\r\n    resourceType: \"\",\r\n  });\r\n  const [emptyResult, setEmptyResult] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams();\r\n\r\n  // Redux state\r\n  const reduxState = useSelector(({ resources }) => ({ resources }));\r\n\r\n  useEffect(() => {\r\n    const getDataAction = async () => {\r\n      const getResources = await dispatch(getSpecifiedResource(id));\r\n      if (getResources.payload.length !== 0)\r\n        return setResource(getResources.payload[0]);\r\n\r\n      return setEmptyResult(\r\n        \"We didn't find the resource that you're looking for. 🙁\"\r\n      );\r\n    };\r\n    getDataAction();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className={classnames({ hide: !reduxState.resources.loading })}>\r\n        <Spinner />\r\n      </div>\r\n      <div\r\n        className={classnames(\"resource__details__container rounded\", {\r\n          hide: reduxState.resources.loading,\r\n        })}\r\n      >\r\n        {emptyResult ? (\r\n          <>\r\n            <h2>{emptyResult}</h2>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {resource.thumbnail && (\r\n              <img src={resource.thumbnail} alt=\"thumbnail\" />\r\n            )}\r\n            <CategoryBagde\r\n              value={resource.language}\r\n              selected={resource.language}\r\n              id={resource.language}\r\n              SelectCategory={() => {}}\r\n              customClass=\"resource__capsule\"\r\n            />\r\n            <h2 className=\"resource__details__title\">{resource.name}</h2>\r\n            <div className=\"resource__details__actions\">\r\n              <div className=\"contributor__data\">\r\n                <img\r\n                  src={resource.contributor.image}\r\n                  alt=\"contributor avatar\"\r\n                />\r\n                <h6>{resource.contributor.name}</h6>\r\n              </div>\r\n              <a href={resource.url}>\r\n                <button className=\"btn btn-primary\">Visit this resource</button>\r\n              </a>\r\n            </div>\r\n            <div className=\"resource__details__description\">\r\n              <p>{resource.description}</p>\r\n              <div className=\"resource__categories\">\r\n                {resource.category.map((categoryList) => (\r\n                  <CategoryBagde\r\n                    value={categoryList}\r\n                    selected={[\"categoryList\"]}\r\n                    id={categoryList}\r\n                    SelectCategory={() => {}}\r\n                    customClass=\"resource__capsule\"\r\n                    key={categoryList.id}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResourceDetail;\r\n","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\Redux\\store.js",[],"C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\Redux\\reducer\\rootReducer.js",[],"C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\Redux\\reducer\\User\\User.reducer.js",[],"C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\Redux\\reducer\\User\\User.type.js",[],"C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\configs\\reduxPersist.config.js",[],"C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\Redux\\reducer\\Resource\\Resource.action.js",["163","164"],"// Library\r\nimport uniqBy from \"lodash/uniqBy\";\r\n\r\n// Types\r\nimport {\r\n  GET_RESOURCES,\r\n  GET_CATEGORIES,\r\n  GET_SPECIFIED_RESOURCE,\r\n  ADD_NEW_RESOURCE,\r\n  ADD_NEW_CATEGORY,\r\n  ADD_NEW_KEYWORDS,\r\n  ADD_NEW_LANGUAGE,\r\n  GET_LANGUAGE,\r\n  GET_KEYWORDS,\r\n} from \"./Resource.type\";\r\nimport { UPDATE_RESOURCE_CONTRIBUTION } from \"../User/User.type\";\r\n\r\n// Configs\r\nimport { firestore, firebase } from \"../../../configs/firebase.config\";\r\n\r\n// Utilities\r\nimport { loading, requestSuccess, getCurrentDateTime } from \"../../../utils\";\r\nimport {\r\n  getConditionDataFromFirebase,\r\n  addNewDocumentToFirebase,\r\n  getDataFromFirebase,\r\n  getDocumentID,\r\n  updateArrayOfObject,\r\n} from \"../../../utils/firebase/firebase.util\";\r\n\r\n// Action to get all the resouces from firestore\r\nexport const getResources = () => async (dispatch) => {\r\n  try {\r\n    dispatch(loading());\r\n    let addResources = await getDataFromFirebase(\"resources\");\r\n\r\n    return dispatch(\r\n      requestSuccess(GET_RESOURCES, {\r\n        libraries: addResources.filter(\r\n          ({ resourceType }) => resourceType === \"libraries\"\r\n        ),\r\n        codeSnippets: addResources.filter(\r\n          ({ resourceType }) => resourceType === \"codeSnippets\"\r\n        ),\r\n        courses: addResources.filter(\r\n          ({ resourceType }) => resourceType === \"courses\"\r\n        ),\r\n        articles: addResources.filter(\r\n          ({ resourceType }) => resourceType === \"articles\"\r\n        ),\r\n      })\r\n    );\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// Action to get all categories\r\nexport const getCategories = () => async (dispatch) => {\r\n  try {\r\n    dispatch(loading());\r\n    let categories = await getDataFromFirebase(\"categories\");\r\n\r\n    categories = uniqBy(categories, \"id\");\r\n    return dispatch(requestSuccess(GET_CATEGORIES, categories));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// Action to get all keywords\r\nexport const getKeywords = () => async (dispatch) => {\r\n  try {\r\n    dispatch(loading());\r\n    let keywords = await getDataFromFirebase(\"keywords\");\r\n\r\n    keywords = uniqBy(keywords, \"id\");\r\n    return dispatch(requestSuccess(GET_KEYWORDS, keywords));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// Action to get all languages\r\nexport const getLanguages = () => async (dispatch) => {\r\n  try {\r\n    dispatch(loading());\r\n    let languages = await getDataFromFirebase(\"languages\");\r\n\r\n    languages = uniqBy(languages, \"id\");\r\n    return dispatch(requestSuccess(GET_LANGUAGE, languages));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// Action to get specified resource\r\nexport const getSpecifiedResource = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch(loading());\r\n\r\n    const resource = await getConditionDataFromFirebase(\"resources\", { id });\r\n\r\n    return dispatch(requestSuccess(GET_SPECIFIED_RESOURCE, resource));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// Action to add new resource\r\nexport const addNewResource = (newResourceData) => async (dispatch) => {\r\n  try {\r\n    dispatch(loading());\r\n    const currentResourceID = `${Date.now()}`;\r\n    await addNewDocumentToFirebase(\"resources\", {\r\n      uploadDate: getCurrentDateTime(\"date\"),\r\n      id: currentResourceID,\r\n      ...newResourceData,\r\n    });\r\n\r\n    let ContributorExist = await getConditionDataFromFirebase(\"contributors\", {\r\n      id: newResourceData.contributor.id,\r\n    });\r\n\r\n    if (ContributorExist.length === 0) {\r\n      await addNewDocumentToFirebase(\"contributors\", {\r\n        username: newResourceData.contributor.username,\r\n        image: newResourceData.contributor.image,\r\n        name: newResourceData.contributor.name,\r\n        id: newResourceData.contributor.id,\r\n        contributorType: \"resource\",\r\n      });\r\n    }\r\n\r\n    const documentIdofUser = await getDocumentID(\"users\", {\r\n      id: newResourceData.contributor.id,\r\n    });\r\n\r\n    updateArrayOfObject(\"users\", documentIdofUser, \"contribution\", {\r\n      resourceType: newResourceData.resourceType,\r\n      resourceId: currentResourceID,\r\n      name: newResourceData.name,\r\n      description: newResourceData.description,\r\n    });\r\n\r\n    newResourceData.category.forEach(\r\n      async (cat) =>\r\n        await addNewDocumentToFirebase(\"categories\", {\r\n          id: cat.toLowerCase(),\r\n          label: cat.toLowerCase(),\r\n          value: cat,\r\n        })\r\n    );\r\n    newResourceData.keywords.forEach(\r\n      async (keys) =>\r\n        await addNewDocumentToFirebase(\"keywords\", {\r\n          id: keys.toLowerCase(),\r\n          label: keys.toLowerCase(),\r\n          value: keys,\r\n        })\r\n    );\r\n\r\n    newResourceData.language.forEach(\r\n      async (lang) =>\r\n        await addNewDocumentToFirebase(\"languages\", {\r\n          id: lang.toLowerCase(),\r\n          label: lang.toLowerCase(),\r\n          value: lang,\r\n        })\r\n    );\r\n\r\n    dispatch(\r\n      requestSuccess(ADD_NEW_CATEGORY, { category: newResourceData.category })\r\n    );\r\n    dispatch(\r\n      requestSuccess(ADD_NEW_KEYWORDS, { keywords: newResourceData.keywords })\r\n    );\r\n    dispatch(\r\n      requestSuccess(ADD_NEW_LANGUAGE, {\r\n        language: newResourceData.language.map((lang) => ({\r\n          id: lang.toLowerCase(),\r\n          label: lang.toLowerCase(),\r\n          value: lang,\r\n        })),\r\n      })\r\n    );\r\n\r\n    dispatch(\r\n      requestSuccess(UPDATE_RESOURCE_CONTRIBUTION, {\r\n        resourceType: newResourceData.resourceType,\r\n        resourceId: currentResourceID,\r\n        name: newResourceData.name,\r\n        description: newResourceData.description,\r\n      })\r\n    );\r\n\r\n    return dispatch(\r\n      requestSuccess(ADD_NEW_RESOURCE, \"Resource succesfully added\")\r\n    );\r\n  } catch (error) {\r\n    return console.log(error);\r\n  }\r\n};\r\n","C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\Redux\\reducer\\Resource\\Resource.type.js",[],"C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\utils\\index.js",[],"C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\Redux\\reducer\\Resource\\Resource.reducer.js",[],"C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\Redux\\reducer\\User\\User.action.js",[],"C:\\Users\\pavan\\Desktop\\stuffs\\web-dev-repo\\src\\utils\\firebase\\firebase.util.js",[],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":3,"column":25,"nodeType":"171","messageId":"172","endLine":3,"endColumn":33},{"ruleId":"169","severity":1,"message":"173","line":37,"column":10,"nodeType":"171","messageId":"172","endLine":37,"endColumn":21},{"ruleId":"169","severity":1,"message":"174","line":37,"column":23,"nodeType":"171","messageId":"172","endLine":37,"endColumn":37},{"ruleId":"175","severity":1,"message":"176","line":53,"column":6,"nodeType":"177","endLine":53,"endColumn":8,"suggestions":"178"},{"ruleId":"175","severity":1,"message":"179","line":67,"column":6,"nodeType":"177","endLine":67,"endColumn":22,"suggestions":"180"},{"ruleId":"181","severity":1,"message":"182","line":147,"column":17,"nodeType":"183","endLine":147,"endColumn":34},{"ruleId":"169","severity":1,"message":"184","line":1,"column":17,"nodeType":"171","messageId":"172","endLine":1,"endColumn":26},{"ruleId":"165","replacedBy":"185"},{"ruleId":"167","replacedBy":"186"},{"ruleId":"169","severity":1,"message":"187","line":24,"column":28,"nodeType":"171","messageId":"172","endLine":24,"endColumn":47},{"ruleId":"175","severity":1,"message":"176","line":59,"column":6,"nodeType":"177","endLine":59,"endColumn":8,"suggestions":"188"},{"ruleId":"169","severity":1,"message":"189","line":1,"column":17,"nodeType":"171","messageId":"172","endLine":1,"endColumn":27},{"ruleId":"169","severity":1,"message":"190","line":2,"column":10,"nodeType":"171","messageId":"172","endLine":2,"endColumn":21},{"ruleId":"175","severity":1,"message":"191","line":44,"column":6,"nodeType":"177","endLine":44,"endColumn":8,"suggestions":"192"},{"ruleId":"169","severity":1,"message":"193","line":19,"column":10,"nodeType":"171","messageId":"172","endLine":19,"endColumn":19},{"ruleId":"169","severity":1,"message":"194","line":19,"column":21,"nodeType":"171","messageId":"172","endLine":19,"endColumn":29},"no-native-reassign",["195"],"no-negated-in-lhs",["196"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'searchInput' is assigned a value but never used.","'setSearchInput' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["197"],"React Hook useEffect has a missing dependency: 'location'. Either include it or remove the dependency array.",["198"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useEffect' is defined but never used.",["195"],["196"],"'setResourceTypeList' is assigned a value but never used.",["199"],"'useContext' is defined but never used.","'useLocation' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["200"],"'firestore' is defined but never used.","'firebase' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"201","fix":"205"},{"desc":"206","fix":"207"},"Update the dependencies array to be: [dispatch]",{"range":"208","text":"209"},"Update the dependencies array to be: [location, location.state]",{"range":"210","text":"211"},{"range":"212","text":"209"},"Update the dependencies array to be: [dispatch, id]",{"range":"213","text":"214"},[1869,1871],"[dispatch]",[2227,2243],"[location, location.state]",[1998,2000],[1333,1335],"[dispatch, id]"]